{
    "openapi": "3.0.0",
    "info": {
      "version": "1",
      "title": "Picker App Web View",
      "license": {
        "name": "MIT"
      }
    },
    "servers": [
      {
        "url": "http://localhost:5000/api",
        "description": "Local server"
      },
      {
        "url": "https://api-pckrapp-staging.codedisruptors.com:4003/api",
        "description": "Staging server"
      }
    ],
    "paths": {
      "/user": {
        "get": {
          "summary": "List of user/s",
          "operationId": "listUser",
          "tags": [
            "user"
          ],
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "description": "maximum number of results to return",
              "required": true,
              "schema": {
                "type": "integer",
                "default": 10
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number",
              "required": true,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "sort_by",
              "in": "query",
              "description": "Sort by specified column",
              "required": false,
              "schema": {
                "type": "string",
                "example": "address",
                "default": "created_at"
              }
            },
            {
              "name": "sort_desc",
              "in": "query",
              "description": "Sort by descending or ascending",
              "required": false,
              "schema": {
                "type": "string",
                "example": "ASC",
                "default": "DESC"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Success"
                      },
                      {
                        "title": "response of getting all users",
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "rows": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/User"
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Error Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      },
                      {
                        "title": "error response of retrieving user/s",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Error retrieving user/s"
                          },
                          "error": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "example": "Error retrieving user/s"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new user",
          "operationId": "createUser",
          "tags": [
            "user"
          ],
          "requestBody": {
            "description": "User object required to create a new user",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Success"
                      },
                      {
                        "title": "response of creating a new user",
                        "type": "object",
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/User"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Error Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      },
                      {
                        "title": "error response of creating a new user",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Error creating user"
                          },
                          "error": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "example": "Error creating user"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/user/{id}": {
        "put": {
          "summary": "Update a user",
          "operationId": "updateUser",
          "tags": [
            "user"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "User ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "example": "5e8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            }
          ],
          "requestBody": {
            "description": "User object required to update a user",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Success"
                      },
                      {
                        "title": "response of updating a user",
                        "type": "object",
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/User"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Error Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      },
                      {
                        "title": "error response of updating a user",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Error updating user"
                          },
                          "error": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "example": "Error updating user"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "delete": {
          "summary": "Delete a user",
          "operationId": "deleteUser",
          "tags": [
            "user"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "User ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Success"
                      },
                      {
                        "title": "response of deleting a user",
                        "type": "object",
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/User"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Error Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      },
                      {
                        "title": "error response of deleting a user",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Error deleting user"
                          },
                          "error": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "example": "Error deleting user"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/orders": {
        "get": {
          "summary": "Get all orders",
          "operationId": "getAllOrders",
          "tags": [
            "order"
          ],
          "responses": {
            "200": {
              "description": "Success Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Success"
                      },
                      {
                        "title": "response of getting all orders",
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "rows": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/Order"
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Error Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      },
                      {
                        "title": "error response of getting all orders",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Error getting all orders"
                          },
                          "error": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "example": "Error getting all orders"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a order",
          "operationId": "createOrder",
          "tags": [
            "order"
          ],
          "requestBody": {
            "description": "Order object required to create a order",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Order"
                    },
                    {
                      "title": "order items",
                      "type": "object",
                      "properties": {
                        "order_items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OrderItem"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Success"
                      },
                      {
                        "title": "response of creating a order",
                        "type": "object",
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/Order"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Error Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      },
                      {
                        "title": "error response of creating a order",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Error creating order"
                          },
                          "error": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "example": "Error creating order"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/orders/{orderId}": {
        "get": {
          "summary": "Get order details",
          "operationId": "getOrderDetails",
          "tags": [
            "order"
          ],
          "parameters": [
            {
              "name": "orderId",
              "in": "path",
              "description": "Order ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Success"
                      },
                      {
                        "title": "response of getting order details",
                        "type": "object",
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/Order"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Error Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      },
                      {
                        "title": "error response of getting order details",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Error getting order details"
                          },
                          "error": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "example": "Error getting order details"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "put": {
          "summary": "Update order",
          "operationId": "updateOrder",
          "tags": [
            "order"
          ],
          "parameters": [
            {
              "name": "orderId",
              "in": "path",
              "description": "Order ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "description": "Order object required to update a order",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Success"
                      },
                      {
                        "title": "response of updating a order",
                        "type": "object",
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/Order"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Error Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      },
                      {
                        "title": "error response of updating a order",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Error updating order"
                          },
                          "error": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "example": "Error updating order"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/orders/{orderId}/items": {
        "get": {
          "summary": "Get all order items",
          "operationId": "getAllOrderItems",
          "tags": [
            "order"
          ],
          "parameters": [
            {
              "name": "orderId",
              "in": "path",
              "description": "Order ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Success"
                      },
                      {
                        "title": "response of getting all order items",
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "rows": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/OrderItem"
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Error Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      },
                      {
                        "title": "error response of getting all order items",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Error getting all order items"
                          },
                          "error": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "example": "Error getting all order items"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/picklists": {
        "get": {
          "summary": "Get all picklists",
          "operationId": "getAllPicklists",
          "tags": [
            "picklist"
          ],
          "responses": {
            "200": {
              "description": "Success Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Success"
                      },
                      {
                        "title": "response of getting all picklists",
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "rows": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/Picklist"
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Error Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      },
                      {
                        "title": "error response of getting all picklists",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Error getting all picklists"
                          },
                          "error": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "example": "Error getting all picklists"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/picklists/{picklistId}": {
        "get": {
          "summary": "Get picklist details",
          "operationId": "getPicklistDetails",
          "tags": [
            "picklist"
          ],
          "parameters": [
            {
              "name": "picklistId",
              "in": "path",
              "description": "Picklist ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Success"
                      },
                      {
                        "title": "response of getting picklist details",
                        "type": "object",
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/Picklist"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Error Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      },
                      {
                        "title": "error response of getting picklist details",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Error getting picklist details"
                          },
                          "error": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "example": "Error getting picklist details"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/picklists/{picklistId}/items": {
        "get": {
          "summary": "Get picklist items",
          "operationId": "getPicklistItems",
          "tags": [
            "picklist"
          ],
          "parameters": [
            {
              "name": "picklistId",
              "in": "path",
              "description": "Picklist ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Success"
                      },
                      {
                        "title": "response of getting all picklist items",
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "rows": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/PicklistItem"
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Error Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      },
                      {
                        "title": "error response of getting picklist items",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Error getting picklist items"
                          },
                          "error": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string",
                                "example": "Error getting picklist items"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/picklists/items/{itemId}": {
        "get": {
          "summary": "Get picklist item details",
          "operationId": "getPicklistItemDetails",
          "tags": [
            "picklist"
          ],
          "parameters": [
            {
              "name": "itemId",
              "in": "path",
              "description": "Picklist item ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Success"
                      },
                      {
                        "title": "response of getting picklist item details",
                        "type": "object",
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/PicklistItem"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Error Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      },
                      {
                        "title": "error response of getting picklist item details",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Error getting picklist item details"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "put": {
          "summary": "Update picklist item",
          "operationId": "updatePicklistItem",
          "tags": [
            "picklist"
          ],
          "parameters": [
            {
              "name": "itemId",
              "in": "path",
              "description": "Picklist item ID",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PicklistItem"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Success"
                      },
                      {
                        "title": "response of updating picklist item",
                        "type": "object",
                        "properties": {
                          "data": {
                            "$ref": "#/components/schemas/PicklistItem"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Error Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      },
                      {
                        "title": "error response of updating picklist item",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Error updating picklist item"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/picklists/{picklistId}/start": {
        "put": {
          "summary": "Start picking",
          "operationId": "startPicking",
          "tags": [
            "picklist"
          ],
          "parameters": [
            {
              "name": "picklistId",
              "in": "path",
              "description": "Picklist ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Success"
                      },
                      {
                        "title": "response of starting picking",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Picking started"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Error Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      },
                      {
                        "title": "error response of starting picking",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Error starting picking"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/picklists/items/{itemId}/out-of-stock": {
        "put": {
          "summary": "Set picklist item as out of stock",
          "operationId": "setPicklistItemOutOfStock",
          "tags": [
            "picklist"
          ],
          "parameters": [
            {
              "name": "itemId",
              "in": "path",
              "description": "Picklist item ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Success"
                      },
                      {
                        "title": "response of change item status",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Item picked"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Error Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      },
                      {
                        "title": "error response of change item status",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Error changing item status"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/picklists/items/{itemId}/remove": {
        "put": {
          "summary": "set picklist item as removed",
          "operationId": "setPicklistItemRemoved",
          "tags": [
            "picklist"
          ],
          "parameters": [
            {
              "name": "itemId",
              "in": "path",
              "description": "Picklist item ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Success"
                      },
                      {
                        "title": "response of change item status",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Item picked"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Error Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      },
                      {
                        "title": "error response of change item status",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Error changing item status"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/picklists/items/{itemId}/update-quantity": {
        "put": {
          "summary": "Update picklist item quantity",
          "operationId": "updatePicklistItemQuantity",
          "tags": [
            "picklist"
          ],
          "parameters": [
            {
              "name": "itemId",
              "in": "path",
              "description": "Picklist item ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "quantity": {
                      "type": "number",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Success"
                      },
                      {
                        "title": "response of updating picklist item quantity",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Item quantity updated"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Error Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      },
                      {
                        "title": "error response of updating picklist item quantity",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Error updating picklist item quantity"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/picklists/{picklistId}/park": {
        "put": {
          "summary": "Park picklist",
          "operationId": "parkPicklist",
          "tags": [
            "picklist"
          ],
          "parameters": [
            {
              "name": "picklistId",
              "in": "path",
              "description": "Picklist ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Success"
                      },
                      {
                        "title": "response of parking picklist",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Picklist parked"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Error Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      },
                      {
                        "title": "error response of parking picklist",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Error parking picklist"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/picklists/{picklistId}/stage": {
        "put": {
          "summary": "Stage picklist",
          "operationId": "stagePicklist",
          "tags": [
            "picklist"
          ],
          "parameters": [
            {
              "name": "picklistId",
              "in": "path",
              "description": "Picklist ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Success"
                      },
                      {
                        "title": "response of staging picklist",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Picklist staged"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Error Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      },
                      {
                        "title": "error response of staging picklist",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Error staging picklist"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/picklists/{picklistId}/finalize": {
        "put": {
          "summary": "Finalize picklist",
          "operationId": "finalizePicklist",
          "tags": [
            "picklist"
          ],
          "parameters": [
            {
              "name": "picklistId",
              "in": "path",
              "description": "Picklist ID",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Success"
                      },
                      {
                        "title": "response of finalizing picklist",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Picklist finalized"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Error Response",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Error"
                      },
                      {
                        "title": "error response of finalizing picklist",
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Error finalizing picklist"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/picklists/{picklistId}/update-picker": {
        "put": {
          "summary": "Update picklist picker",
          "operationId": "updatePicker",
            "tags": [
                "picklist"
            ],
            "parameters": [
                {
                    "name": "picklistId",
                    "in": "path",
                    "description": "Picklist ID",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pickerId": {
                                    "type": "string",
                                    "format": "uuid"
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Success Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Success"
                                    },
                                    {
                                        "title": "response of updating picklist picker",
                                        "type": "object",
                                        "properties": {
                                            "message": {
                                                "type": "string",
                                                "example": "Picklist picker updated"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "default": {
                "description": "Error Response",
                "content": {
                    "application/json": {
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/Error"
                                },
                                {
                                    "title": "error response of updating picklist picker",
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error updating picklist picker"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
      },
      "/picklists/consolidate": {
        "put": {
          "summary": "Consolidate all picklists",
            "operationId": "consolidatePicklists",
            "tags": [
                "picklist"
            ],
            "requestBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "orderId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "description": "Order ID of of the picklists to consolidate"
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Success Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Success"
                                    },
                                    {
                                        "title": "response of consolidating picklists",
                                        "type": "object",
                                        "properties": {
                                            "message": {
                                                "type": "string",
                                                "example": "All Picklists consolidated"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "default":{
                    "description": "Error Response",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Error"
                                    },
                                    {
                                        "title": "error response of consolidating picklists",
                                        "type": "object",
                                        "properties": {
                                            "message": {
                                                "type": "string",
                                                "example": "Error consolidating picklists"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }

                }
            }
        }
    }
    },
    "components": {
      "schemas": {
        "User": {
          "type": "object",
          "required": [
            "id",
            "first_name",
            "last_name",
            "email",
            "branch_id",
            "zone",
            "is_active"
          ],
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "example": "5e8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            },
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Doe"
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "test@gmail.com"
            },
            "branch_id": {
              "type": "string",
              "format": "uuid",
              "example": "5e8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            },
            "zone": {
              "type": "string"
            },
            "is_active": {
              "type": "boolean"
            },
            "remarks": {
              "type": "string"
            },
            "role_id": {
              "type": "string",
              "format": "uuid"
            },
            "created_by": {
              "type": "string",
              "format": "uuid"
            },
            "updated_by": {
              "type": "string",
              "format": "uuid"
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "Branch": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "description": "Unique identifier of the branch",
              "example": "5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            },
            "name": {
              "type": "string",
              "description": "Name of the branch",
              "example": "Laguna Hills"
            },
            "contact_person": {
              "type": "string",
              "description": "Name of the contact person",
              "example": "John Doe"
            },
            "contact_number": {
              "type": "string",
              "description": "Contact number of the branch",
              "example": "09123456789"
            },
            "email": {
              "type": "string",
              "description": "Email address of the branch",
              "example": "test@gmail.com"
            },
            "address": {
              "type": "string",
              "description": "Address of the branch",
              "example": "Lawa, Calamba, Laguna"
            },
            "barangay": {
              "type": "string",
              "description": "Barangay of the branch",
              "example": "Lawa"
            },
            "municipality": {
              "type": "string",
              "description": "Municipality of the branch",
              "example": "Calamba"
            },
            "province": {
              "type": "string",
              "description": "Province of the branch",
              "example": "Laguna"
            },
            "region": {
              "type": "string",
              "description": "Region of the branch",
              "example": "CALABARZON"
            },
            "zip_code": {
              "type": "integer",
              "description": "Zip code of the branch",
              "example": "1605"
            },
            "country": {
              "type": "string",
              "description": "Country of the branch",
              "example": "Philippines"
            },
            "is_active": {
              "type": "boolean",
              "description": "If the branch is active",
              "example": true
            },
            "remarks": {
              "type": "string",
              "description": "Remarks of the branch",
              "example": "Laguna Hills branch"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Date and time when the branch was created",
              "example": "2019-01-01T00:00:00.000Z"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Date and time when the branch was updated",
              "example": "2019-01-01T00:00:00.000Z"
            }
          }
        },
        "Merchant": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "description": "Unique identifier of the mercant",
              "example": "5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            },
            "name": {
              "type": "string",
              "description": "Name of the Merchant",
              "example": "Merchant 1"
            },
            "contact_person": {
              "type": "string",
              "description": "Contact Person of the Merchant",
              "example": "John Doe"
            },
            "contact_number": {
              "type": "string",
              "description": "Contact Number of the Merchant",
              "example": "09123456789"
            },
            "email": {
              "type": "string",
              "description": "Email of the Merchant",
              "example": "test@gmail.com"
            },
            "address": {
              "type": "string",
              "description": "Address of the Merchant",
              "example": "123 Main St"
            },
            "barangay": {
              "type": "string",
              "description": "Barangay of the mercant",
              "example": "Lawa"
            },
            "municipality": {
              "type": "string",
              "description": "Municipality of the mercant",
              "example": "Calamba"
            },
            "province": {
              "type": "string",
              "description": "Province of the mercant",
              "example": "Laguna"
            },
            "region": {
              "type": "string",
              "description": "Region of the mercant",
              "example": "CALABARZON"
            },
            "zip_code": {
              "type": "integer",
              "description": "Zip code of the mercant",
              "example": "1605"
            },
            "country": {
              "type": "string",
              "description": "Country of the mercant",
              "example": "Philippines"
            },
            "branding_id": {
              "type": "string",
              "format": "uuid",
              "description": "Unique identifier of the branding",
              "example": "5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            },
            "is_active": {
              "type": "boolean",
              "description": "If the mercant is active",
              "example": true
            },
            "maximum_number_of_branches": {
              "type": "integer",
              "description": "Maximum number of branches that can be created",
              "example": 10
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Date and time when the mercant was created",
              "example": "2019-01-01T00:00:00.000Z"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Date and time when the mercant was updated",
              "example": "2019-01-01T00:00:00.000Z"
            }
          }
        },
        "Branding": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "description": "Unique identifier of the branding",
              "example": "5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            },
            "background_color": {
              "type": "string",
              "description": "Background color of the branding",
              "example": "#000000"
            },
            "sidebar_bg_color": {
              "type": "string",
              "description": "Sidebar background color of the branding",
              "example": "#000000"
            },
            "sidebar_selected_bg_color": {
              "type": "string",
              "description": "Sidebar selected background color of the branding",
              "example": "#000000"
            },
            "sidebar_selected_font_color": {
              "type": "string",
              "description": "Sidebar selected font color of the branding",
              "example": "#000000"
            },
            "sidebar_font_color": {
              "type": "string",
              "description": "Sidebar font color of the branding",
              "example": "#000000"
            },
            "header_bg_color": {
              "type": "string",
              "description": "Header background color of the branding",
              "example": "#000000"
            },
            "header_font_color": {
              "type": "string",
              "description": "Header font color of the branding",
              "example": "#000000"
            },
            "icon_web_url": {
              "type": "string",
              "description": "Icon web url of the branding",
              "example": "https://www.logomaker.com/wpstatic/uploads/2021/10/LogoMaker.jpg"
            },
            "icon_mobile_url": {
              "type": "string",
              "description": "Icon mobile url of the branding",
              "example": "https://www.logomaker.com/wpstatic/uploads/2021/10/LogoMaker.jpg"
            },
            "merchant_id": {
              "type": "string",
              "format": "uuid",
              "description": "Unique identifier of the merchant",
              "example": "5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Date and time when the branding was created",
              "example": "2019-01-01T00:00:00.000Z"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Date and time when the branding was updated",
              "example": "2019-01-01T00:00:00.000Z"
            }
          }
        },
        "Role": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "description": "Unique identifier of the role",
              "example": "5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            },
            "name": {
              "type": "string",
              "description": "Name of the role",
              "example": "Admin"
            },
            "is_active": {
              "type": "boolean",
              "description": "If the role is active",
              "example": true
            },
            "is_admin": {
              "type": "boolean",
              "description": "If the role is admin",
              "example": true
            },
            "remarks": {
              "type": "string",
              "description": "Remarks of the role",
              "example": "Admin role"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Date and time when the role was created",
              "example": "2019-01-01T00:00:00.000Z"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Date and time when the role was updated",
              "example": "2019-01-01T00:00:00.000Z"
            }
          }
        },
        "Module": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "description": "Unique identifier of the module",
              "example": "5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            },
            "name": {
              "type": "string",
              "description": "Name of the module",
              "example": "Branch Module"
            },
            "uri": {
              "type": "string",
              "description": "Uri of the module",
              "example": "branch"
            },
            "order": {
              "type": "integer",
              "description": "Order of the module",
              "example": 1
            },
            "parent_id": {
              "type": "string",
              "format": "uuid",
              "description": "Unique identifier of the parent module",
              "example": "5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            },
            "is_create_enabled_non_admin": {
              "type": "boolean",
              "description": "If the module is create enabled non admin",
              "example": true
            },
            "is_update_enabled_non_admin": {
              "type": "boolean",
              "description": "If the module is update enabled non admin",
              "example": true
            },
            "is_retrieve_enabled_non_admin": {
              "type": "boolean",
              "description": "If the module is retrieve enabled non admin",
              "example": true
            },
            "is_export_enabled_non_admin": {
              "type": "boolean",
              "description": "If the module is export enabled non admin",
              "example": true
            },
            "is_create_enabled_admin": {
              "type": "boolean",
              "description": "If the module is create enabled admin",
              "example": true
            },
            "is_update_enabled_admin": {
              "type": "boolean",
              "description": "If the module is update enabled admin",
              "example": true
            },
            "is_retrieve_enabled_admin": {
              "type": "boolean",
              "description": "If the module is retrieve enabled admin",
              "example": true
            },
            "is_export_enabled_admin": {
              "type": "boolean",
              "description": "If the module is export enabled admin",
              "example": true
            }
          }
        },
        "PasswordPolicy": {
          "type": "object",
          "required": [
            "user_pool_id"
          ],
          "properties": {
            "user_pool_id": {
              "type": "string",
              "description": "identifier of the user pool",
              "example": "us-east-1_OwjQ6sH64"
            },
            "name": {
              "type": "string",
              "description": "name of the password policy",
              "example": "User Pool"
            },
            "expires_in_days": {
              "type": "integer",
              "description": "number of days the password expires",
              "example": 30
            },
            "prevent_reuse_count": {
              "type": "integer",
              "description": "number of times the password can be reused",
              "example": 3
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Date and time when the password policy was created",
              "example": "2019-01-01T00:00:00.000Z"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Date and time when the password policy was updated",
              "example": "2019-01-01T00:00:00.000Z"
            }
          }
        },
        "RevokedToken": {
          "type": "object",
          "required": [
            "token"
          ],
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "description": "Unique identifier of the module",
              "example": "5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            },
            "token": {
              "type": "string",
              "description": "token that was revoked",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
            }
          }
        },
        "Order": {
          "type": "object",
          "required": [
            "order_number"
          ],
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "description": "Unique identifier of the order",
              "example": "5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            },
            "order_number": {
              "type": "string",
              "description": "order number",
              "example": "12345"
            },
            "date": {
              "type": "string",
              "format": "date-time",
              "description": "Date and time when the order was created",
              "example": "2019-01-01T00:00:00.000Z"
            },
            "total_quantity": {
              "type": "integer",
              "description": "total quantity of the order",
              "example": 10
            },
            "remarks": {
              "type": "string",
              "description": "remarks of the order",
              "example": "This is a test order"
            },
            "status": {
              "type": "string",
              "description": "status of the order",
              "example": "Pending"
            },
            "delivery_date": {
              "type": "string",
              "format": "date-time",
              "description": "delivery date of the order",
              "example": "2019-01-01T00:00:00.000Z"
            },
            "delivery_time_block_from": {
              "type": "string",
              "format": "date-time",
              "description": "delivery time block from of the order",
              "example": "2019-01-01T00:00:00.000Z"
            },
            "delivery_time_block_to": {
              "type": "string",
              "format": "date-time",
              "description": "delivery time block to of the order",
              "example": "2019-01-01T00:00:00.000Z"
            },
            "picking_type": {
              "type": "string",
              "description": "picking type of the order",
              "example": "Delivery"
            },
            "customer_name": {
              "type": "string",
              "description": "customer name of the order",
              "example": "John Doe"
            },
            "customer_email": {
              "type": "string",
              "description": "customer email of the order",
              "example": "test@gmail.com"
            },
            "customer_contact_number": {
              "type": "string",
              "description": "customer contact number of the order",
              "example": "1234567890"
            },
            "shipping_method": {
              "type": "string",
              "description": "shipping method of the order",
              "example": "Delivery"
            },
            "shipping_fee": {
              "type": "number",
              "description": "shipping fee of the order",
              "example": 10
            },
            "shopper_fee": {
              "type": "number",
              "description": "shopper fee of the order",
              "example": 10
            },
            "discount": {
              "type": "number",
              "description": "discount of the order",
              "example": 10
            },
            "address": {
              "type": "string",
              "description": "delivery address of the order",
              "example": "123 Main St, New York, NY 10001"
            },
            "barangay": {
              "type": "string",
              "description": "delivery barangay of the order",
              "example": "Pasig"
            },
            "municipality": {
              "type": "string",
              "description": "delivery municipality of the order",
              "example": "Pasig"
            },
            "province": {
              "type": "string",
              "description": "delivery province of the order",
              "example": "Metro Manila"
            },
            "region": {
              "type": "string",
              "description": "delivery region of the order",
              "example": "Metro Manila"
            },
            "country": {
              "type": "string",
              "description": "delivery country of the order",
              "example": "Philippines"
            },
            "zip_code": {
              "type": "string",
              "description": "delivery zip code of the order",
              "example": "10001"
            },
            "branch_id": {
              "type": "string",
              "format": "uuid",
              "description": "branch id of the order",
              "example": "5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Date and time when the order was created",
              "example": "2019-01-01T00:00:00.000Z"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "Date and time when the order was updated",
              "example": "2019-01-01T00:00:00.000Z"
            }
          }
        },
        "OrderItem": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "description": "Unique identifier of the order",
              "example": "5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            },
            "name": {
              "type": "string",
              "description": "name of the order",
              "example": "Test Item"
            },
            "sku": {
              "type": "string",
              "description": "sku of the order",
              "example": "TEST-ITEM"
            },
            "barcode": {
              "type": "string",
              "description": "barcode of the order",
              "example": "TEST-ITEM"
            },
            "zone": {
              "type": "string",
              "description": "zone of the order",
              "example": "Zone 1"
            },
            "unit_price": {
              "type": "number",
              "description": "unit price of the order",
              "example": 10
            },
            "quantity": {
              "type": "integer",
              "description": "quantity of the order",
              "example": 10
            },
            "remarks": {
              "type": "string",
              "description": "remarks of the order",
              "example": "This is a test order"
            },
            "is_open_weight": {
              "type": "boolean",
              "description": "is open weight of the order",
              "example": true
            },
            "weight": {
              "type": "number",
              "description": "weight of the order",
              "example": 10
            },
            "order_id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "description": "order id of the order",
              "example": "5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            }
          }
        },
        "Picklist": {
          "type": "object",
          "required": [
            "order_id"
          ],
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true,
              "description": "Unique identifier of the picklist",
              "example": "5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            },
            "order_id": {
              "type": "string",
              "format": "uuid",
              "description": "order id of the picklist",
              "example": "5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            },
            "status_id": {
              "type": "integer",
              "description": "status id of the picklist",
              "example": "1"
            },
            "picklist_number": {
              "type": "integer",
              "description": "picklist number of the picklist",
              "example": 1
            },
            "delivery_date": {
              "type": "string",
              "format": "date-time",
              "description": "delivery date of the picklist",
              "example": "2019-01-01T00:00:00.000Z"
            },
            "delivery_time_block_from": {
              "type": "string",
              "format": "date-time",
              "description": "delivery time block from of the picklist",
              "example": "2019-01-01T00:00:00.000Z"
            },
            "delivery_time_block_to": {
              "type": "string",
              "format": "date-time",
              "description": "delivery time block to of the picklist",
              "example": "2019-01-01T00:00:00.000Z"
            },
            "picked_cost": {
              "type": "number",
              "description": "picked cost of the picklist",
              "example": 10
            },
            "picked_quantity": {
              "type": "integer",
              "description": "picked quantity of the picklist",
              "example": 10
            },
            "zone": {
              "type": "string",
              "description": "zone of the picklist",
              "example": "Zone 1"
            },
            "assigned_picker_id": {
              "type": "string",
              "format": "uuid",
              "description": "assigned picker id of the picklist",
              "example": "5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "created at of the picklist",
              "example": "2019-01-01T00:00:00.000Z"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "updated at of the picklist",
              "example": "2019-01-01T00:00:00.000Z"
            }
          }
        },
        "PicklistItem": {
          "type": "object",
          "required": [
            "picklist_id"
          ],
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "readOnly": true,
              "description": "Unique identifier of the picklist item",
              "example": "5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            },
            "picklist_id": {
              "type": "string",
              "format": "uuid",
              "description": "picklist id of the picklist item",
              "example": "5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            },
            "sku": {
              "type": "string",
              "description": "sku of the picklist item",
              "example": "TEST-ITEM"
            },
            "barcode": {
              "type": "string",
              "description": "barcode of the picklist item",
              "example": "TEST-ITEM"
            },
            "zone": {
              "type": "string",
              "description": "zone of the picklist item",
              "example": "Zone 1"
            },
            "is_open_weight": {
              "type": "boolean",
              "description": "is open weight of the picklist item",
              "example": true
            },
            "order_quantity": {
              "type": "integer",
              "description": "order quantity of the picklist item",
              "example": 10
            },
            "actual_quantity": {
              "type": "integer",
              "description": "actual quantity of the picklist item",
              "example": 10
            },
            "order_weight": {
              "type": "number",
              "description": "order weight of the picklist item",
              "example": 10
            },
            "actual_weight": {
              "type": "number",
              "description": "actual weight of the picklist item",
              "example": 10
            },
            "order_unit_price": {
              "type": "number",
              "description": "order unit price of the picklist item",
              "example": 10
            },
            "actual_price": {
              "type": "number",
              "description": "actual price of the picklist item",
              "example": 10
            },
            "tag": {
              "type": "string",
              "description": "tag of the picklist item",
              "example": "TEST-ITEM"
            },
            "status_id": {
              "type": "integer",
              "description": "status id of the picklist",
              "example": 1
            },
            "picklist_id_discrete": {
              "type": "string",
              "format": "uuid",
              "description": "picklist id discrete of the picklist item",
              "example": "5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            },
            "picklist_id_zone": {
              "type": "string",
              "format": "uuid",
              "description": "picklist id zone of the picklist item",
              "example": "5d8f8f8f-8f8f-8f8f-8f8f-8f8f8f8f8f8f"
            },
            "image_url": {
              "type": "string",
              "description": "image url of the picklist item",
              "example": "https://example.com/image.jpg"
            },
            "remarks": {
              "type": "string",
              "description": "remarks of the picklist item",
              "example": "TEST-ITEM"
            },
            "disposition": {
              "type": "string",
              "description": "disposition of the picklist item",
              "example": "TEST-ITEM"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "created at of the picklist item",
              "example": "2019-01-01T00:00:00.000Z"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "updated at of the picklist item",
              "example": "2019-01-01T00:00:00.000Z"
            }
          }
        },
        "PicklistStatus": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "readOnly": true,
              "description": "Unique identifier of the picklist status",
              "example": 1
            },
            "name": {
              "type": "string",
              "description": "name of the picklist status",
              "example": "TEST-STATUS"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "created at of the picklist status",
              "example": "2019-01-01T00:00:00.000Z"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "updated at of the picklist status",
              "example": "2019-01-01T00:00:00.000Z"
            }
          }
        },
        "Error": {
          "type": "object",
          "required": [
            "name",
            "message",
            "error",
            "status",
            "statusText"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "name of the error",
              "example": "APIClientError"
            },
            "message": {
              "type": "string",
              "example": "Error retrieving data"
            },
            "error": {
              "type": "object",
              "example": {
                "message": "Error retrieving data"
              }
            },
            "status": {
              "type": "integer",
              "format": "int32",
              "example": 500
            },
            "statusText": {
              "type": "string",
              "example": [
                "Internal Server Error",
                "Bad Request",
                "Not Found"
              ]
            }
          }
        },
        "Success": {
          "type": "object",
          "required": [
            "data",
            "message",
            "status",
            "statusText"
          ],
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "rows": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            },
            "message": {
              "type": "string",
              "example": "Success retrieve data"
            },
            "status": {
              "type": "integer",
              "format": "int32",
              "example": 200
            },
            "statusText": {
              "type": "string",
              "example": "OK"
            }
          }
        }
      }
    }
  }